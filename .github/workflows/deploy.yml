name: Deploy Self Serve Envs

on:
  workflow_call:
    inputs:
      action:
        description: 'To deploy or destroy infrastructure'
        required: true
        type: string
      file_name:
        description: 'Comma separated list of YAML file names'
        required: false
        type: string
      tf_branch:
        description: 'Branch name for services_tf repo'
        required: false
        default: main
        type: string
      ansible_branch:
        description: 'Branch name for services_ansible repo'
        required: false
        default: master
        type: string
    secrets:
      JENKINS_SECURITYTOKEN:
        required: true

jobs:
  build:
    name: Steps to create resources in cddev account
    runs-on: appdev-selfhosted-al2023

    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop

      - name: Env Set-Up
        run: |
          git checkout develop
          git pull
          echo "Checking out the required TF and Ansible scripts"
          /var/lib/cloud/scripts/per-instance/checkout-selfserve.sh ${{ inputs.tf_branch }} ${{ inputs.ansible_branch }}
          ls -larth
          ls -larth ~/selfserve
          rm -rf ~/selfserve/scripts/config
          mv config ~/selfserve/scripts/
          ls -larth ~/selfserve/scripts/config
          export PYTHONUNBUFFERED=TRUE
          export ANSIBLE_STDOUT_CALLBACK=debug          
          python3 ~/selfserve/scripts/deployEnv.py ${{ inputs.action }} ${{ inputs.file_name }}

      - name: Install yq
        run: |         
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.27.3/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq      

      - name: Trigger Jenkins Job
        run: |
          # Extract values directly in the curl command
          file_path=~/selfserve/scripts/${{ inputs.file_name }}
          product_name=$(yq eval '.product_info.product_name' "$file_path")
          environment_type=$(yq eval '.environment_type' "$file_path")
          user=$(yq eval '.vms[.environment_name].genesis_app.user' "$file_path")

          # Trigger Jenkins job with extracted variables
          curl -X POST "https://jenkinsdev.cdservice.genesis.global/buildByToken/buildWithParameters?token=${{ secrets.JENKINS_SECURITYTOKEN }}&job=AppDev-DevOps/pipelines/create_new_v2_pipelines" \
            --data-urlencode "product=${product_name}" \
            --data-urlencode "environment_level=${environment_type}" \
            --data-urlencode "job_name=product_${product_name}_upgrade" \
            --data-urlencode "base_path=AppDev-CI_CD" \
            --data-urlencode "genesis_user=${user}"
