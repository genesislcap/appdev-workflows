name: Deploy Self Serve Envs

on:
  workflow_call:
    inputs:
      action:
        description: 'To deploy or destroy infrastructure'
        required: true
        type: string
      file_name:
        description: 'Comma separated list of YAML file names'
        required: false
        type: string
      tf_branch:
        description: 'Branch name for services_tf repo'
        required: false
        default: main
        type: string
      ansible_branch:
        description: 'Branch name for services_ansible repo'
        required: false
        default: master
        type: string
    secrets:
      JENKINS_SECURITYTOKEN:
        required: true

jobs:
  build:
    name: Steps to create resources in cddev account
    runs-on: appdev-selfhosted-al2023

    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop

      - name: Env Set-Up
        run: |
          git checkout develop
          git pull
          echo "Checking out the required TF and Ansible scripts"
          /var/lib/cloud/scripts/per-instance/checkout-selfserve.sh ${{ inputs.tf_branch }} ${{ inputs.ansible_branch }}
          ls -larth
          ls -larth ~/selfserve
          rm -rf ~/selfserve/scripts/config
          mv config ~/selfserve/scripts/
          ls -larth ~/selfserve/scripts/config
          export PYTHONUNBUFFERED=TRUE
          export ANSIBLE_STDOUT_CALLBACK=debug
          # Uncomment the following line to execute the Python script
          # python3 ~/selfserve/scripts/deployEnv.py ${{ inputs.action }} ${{ inputs.file_name }}

      - name: Install Python 3 and PyYAML
        run: |
          sudo dnf install -y python3
          python3 -m pip install --upgrade pip
          python3 -m pip install pyyaml

      - name: Extract Variables from YAML
        id: extract_vars
        run: |
          python3 - <<EOF
          import yaml
          import os

          file_name = "${{ inputs.file_name }}"

          # Load the YAML file
          with open(file_name, 'r') as file:
              data = yaml.safe_load(file)

          # Extract the required variables
          product_name = data.get('product_info', {}).get('product_name', 'unknown')
          environment_type = data.get('environment_type', 'unknown')
          user = data.get('vms', {}).get(data.get('environment_name', ''), {}).get('genesis_app', {}).get('user', 'unknown')

          # Print environment variables for GitHub Actions
          with open(os.getenv('GITHUB_ENV'), 'a') as env_file:
              env_file.write(f"PRODUCT_NAME={product_name}\n")
              env_file.write(f"ENVIRONMENT_TYPE={environment_type}\n")
              env_file.write(f"USER={user}\n")
          EOF

      - name: Trigger Jenkins Job
        run: |
          curl -X POST "https://jenkinsdev.cdservice.genesis.global/buildByToken/buildWithParameters?token=${{ secrets.JENKINS_SECURITYTOKEN }}&job=AppDev-DevOps/pipelines/create_new_v2_pipelines" \
            --data-urlencode "product=${{ env.PRODUCT_NAME }}" \
            --data-urlencode "environment_level=${{ env.ENVIRONMENT_TYPE }}" \
            --data-urlencode "job_name=product_${{ env.PRODUCT_NAME }}_upgrade" \
            --data-urlencode "base_path=AppDev-CI_CD" \
            --data-urlencode "genesis_user=${{ env.USER }}"
