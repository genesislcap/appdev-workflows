name:  Deploy Self serve envs

on:
  workflow_call:
    inputs:
      action:
        description: 'To deploy infra or destroy infra'
        required: true
        type: string
      file_name:
        description: 'Comma separated list of file yaml name'
        required: false
        type: string
      tf_branch:
        description: 'Branch name for services_tf repo'
        required: false
        default: main
        type: string
      ansible_branch:
        description: 'Branch name for services_ansible repo'
        default: master
        required: false
        type: string
    secrets:
      JENKINS_SECURITYTOKEN:
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Steps to create resources in cddev account
    runs-on: appdev-selfhosted-al2023

    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop

      - name: Env Set-Up
        run: |
          git checkout develop
          git pull
          echo "Checking out the required TF and ansible scripts- per run"
          /var/lib/cloud/scripts/per-instance/checkout-selfserve.sh ${{ inputs.tf_branch }} ${{ inputs.ansible_branch }}
          ls -larth
          ls -larth ~/selfserve
          rm -rf ~/selfserve/scripts/config
          mv config ~/selfserve/scripts/
          ls -larth ~/selfserve/scripts/config
          export PYTHONUNBUFFERED=TRUE
          export ANSIBLE_STDOUT_CALLBACK=debug
          # python3 ~/selfserve/scripts/deployEnv.py ${{ inputs.action }} ${{ inputs.file_name }}
      
      - name: Install yq and jq
        run: |
          # Install jq
          sudo yum install -y jq

          # Install yq (v4.27.3, adjust version as needed)
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.27.3/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Extract Variables from JSON
        id: extract_vars
        run: |
          # Extract values from the JSON file
          product_name=$(jq -r '.product_name' ~/selfserve/scripts/${{ inputs.file_name }})
          environment_type=$(jq -r '.environment_type' ~/selfserve/scripts/${{ inputs.file_name }})
          user=$(jq -r '.user' ~/selfserve/scripts/${{ inputs.file_name }})

          # Output the extracted values as GitHub Actions environment variables
          echo "product_name=${product_name}" >> $GITHUB_ENV
          echo "environment_type=${environment_type}" >> $GITHUB_ENV
          echo "user=${user}" >> $GITHUB_ENV

      - name: Trigger Jenkins Job
        run: |
          curl -X POST "https://jenkinsdev.cdservice.genesis.global/buildByToken/buildWithParameters?token=${{ secrets.JENKINS_SECURITYTOKEN }}&job=AppDev-DevOps/pipelines/create_new_v2_pipelines" \
            --data-urlencode "product=${{ env.product_name }}" \
            --data-urlencode "environment_level=${{ env.environment_type }}" \
            --data-urlencode "job_name=product_${{ env.product_name }}_upgrade" \
            --data-urlencode "base_path=AppDev-CI_CD" \
            --data-urlencode "genesis_user=${{ env.user }}"