# This is a workflow to being called from appdev-devops repo in genesiscicd
#  NPM web build workflow v0.0.1

name: Server Deploy

on:
  workflow_call:
    inputs:
      repo_name:
        required: true
        type: string
      branch:
        required: false
        type: string
      artifact_location:
        required: true
        type: string
      product_name:
        required: false
        type: string
      module_name:
        required: false
        type: string
      mvn_options:
        required: false
        type: string
      build_path:
        required: false
        type: string
      artifact_product_name:
        required: false
        type: string
      skip_tests:
        required: false
        type: string


    secrets:
      JFROG_USERNAME:
        required: true
      JFROG_EMAIL:
        required: true
      JFROG_PASSWORD:
        required: true

env:
  REPO_NAME: ${{ inputs.repo_name }}
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Steps to build the artifact and upload it to jfrog
    env:
      JFROG_USERNAME: ${{secrets.JFROG_USERNAME}}
      JFROG_EMAIL: ${{secrets.JFROG_EMAIL}}
      JFROG_PASSWORD: ${{secrets.JFROG_PASSWORD}}
    runs-on: appdev-selfhosted
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'maven'
          
      - name: Env Set-Up
        run: |
             echo "VERSION=$(git describe --tags | cut -d"_" -f2)" >> $GITHUB_ENV 
             echo "REPO_NAME=$(git config --get remote.origin.url | cut -d"." -f2 | cut -d"/" -f2 | xargs)" >> $GITHUB_ENV                                                               
             echo "PRODUCT_NAME=$(git config --get remote.origin.url | cut -d"." -f2 | cut -d"/" -f3 | cut -d"-" -f1 | cut -d"_" -f2)" >> $GITHUB_ENV                                         
             echo "PRODUCT_BASE=$(readlink -f $(find . -name pom.xml) | rev | cut -c9- | rev | sort -n | head -n 1)" >> $GITHUB_ENV
             echo "OUTPUT=$(git config --get remote.origin.url | cut -d"." -f2 | cut -d"/" -f3 | cut -d"-" -f1 | cut -d"_" -f2)-server-$(git tag)-bin.zip" >> $GITHUB_ENV
 
      - name: Env Setup
        if: ${{ inputs.branch == 'develop' ||  inputs.branch == 'main' ||  inputs.branch == 'master' || inputs.branch == '0.0.0' }}
        run: |
             echo "VERSION=${{ inputs.branch }}" >> $GITHUB_ENV
             echo "OUTPUT=$(git config --get remote.origin.url | cut -d"." -f2 | cut -d"/" -f3 | cut -d"-" -f1 | cut -d"_" -f2)-server-${{ inputs.branch }}-bin.zip" >> $GITHUB_ENV
             
      - name: Env Setup for PRODUCT_NAME for repos not following a conventions
        if: ${{ inputs.product_name }}
        run: |
              echo "PRODUCT_NAME=${{ inputs.product_name }}" >> $GITHUB_ENV #NOTE: only for those that are not following a standard naming convention
              
      - name: Env Setup for VERSION if module_name is present
        if: ${{ inputs.module_name }}
        run: |
              echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV
      
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: '[{ "id": "maven-central", "name": "Maven central", "url": "https://repo1.maven.org/maven2/" },{ "id": "genesis-repo", "name": "genesis-repo", "url": "https://genesisglobal.jfrog.io/genesisglobal/dev-repo", "snapshots": {"enabled": "true", "updatePolicy": "always"}}]'
          plugin_repositories: '[{ "id": "maven-central", "name": "Maven central", "url": "https://repo1.maven.org/maven2/" },{ "id": "genesis-repo", "name": "genesis-repo", "url": "https://genesisglobal.jfrog.io/genesisglobal/dev-repo", "snapshots": {"enabled": "true", "updatePolicy": "always"}} ]'
          servers: '[{ "id": "genesis-repo", "username": "${{ secrets.JFROG_USERNAME }}", "password": "${{ secrets.JFROG_PASSWORD }}", "filePermissions": "664", "directoryPermissions": "775" }]'
          active_profiles: '["github"]'

      - name: Cache Maven Dependencies
        id: cache-maven-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-
     
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@1.0.0
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
        env:
          JAVA_HOME: /opt/jdk

      - name: 'Publish Test Report'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: 'test-reports'
          path: ${{github.workspace}}/reports
          
      - name: set version 
        run: |
           source ~/.bashrc
           if [ -z "${{ inputs.build_path }}" ]; then
               cd "${{ inputs.build_path }}"
           fi
           pwd
           ls -larth
           cat ~/.m2/settings.xml
           echo "Version: ${{ env.VERSION }}"
           if [ -z "${{ inputs.mvn_options }}" ]; then
               mvn versions:set -DnewVersion=${{ env.VERSION }}
           else
               mvn versions:set -DnewVersion=${{ env.VERSION }} ${{ inputs.mvn_options }}
           fi
           
      - name: Build
        if: ${{ inputs.skip_tests != 'true' }}
        run: |
           source ~/.bashrc
           if [ -z "${{ inputs.build_path }}" ]; then
               cd "${{ inputs.build_path }}"
           fi
           if [ -z "${{ inputs.mvn_options }}" ]; then
               JAVA_TOOL_OPTIONS="-Xmx8192m" mvn -s ~/.m2/settings.xml  package
           else
               JAVA_TOOL_OPTIONS="-Xmx8192m" mvn -s ~/.m2/settings.xml  package ${{ inputs.mvn_options }}
           fi
           
      - name: Build
        if: ${{ inputs.skip_tests == 'true' }}
        run: |
           source ~/.bashrc
           if [ -z "${{ inputs.build_path }}" ]; then
               cd "${{ inputs.build_path }}"
           fi
           if [ -z "${{ inputs.mvn_options }}" ]; then
               JAVA_TOOL_OPTIONS="-Xmx8192m" mvn -s ~/.m2/settings.xml  package -DskipTests=true
           else
               JAVA_TOOL_OPTIONS="-Xmx8192m" mvn -s ~/.m2/settings.xml  package ${{ inputs.mvn_options }} -DskipTests=true
           fi

      - name: Publish to Artifactory 
        run: |
           if [ -z "${{ inputs.artifact_product_name }}" ]; then           
              cd ${{ env.PRODUCT_BASE }}/${{ inputs.artifact_location }}/
              curl -u ${{ secrets.JFROG_USERNAME }}:"${{secrets.JFROG_PASSWORD}}" -X PUT "https://genesisglobal.jfrog.io/artifactory/product/${{ env.PRODUCT_NAME }}/server/" -T *.zip
            
              cd ${{ env.PRODUCT_BASE }}/
              curl -u ${{ secrets.JFROG_USERNAME }}:"${{secrets.JFROG_PASSWORD}}" -X PUT "https://genesisglobal.jfrog.io/artifactory/product/${{ env.PRODUCT_NAME }}/server/pom-${{ env.VERSION }}.xml" -T pom.xml
            else
              cd ${{ env.PRODUCT_BASE }}/${{ inputs.artifact_location }}/
              curl -u ${{ secrets.JFROG_USERNAME }}:"${{secrets.JFROG_PASSWORD}}" -X PUT "https://genesisglobal.jfrog.io/artifactory/product/${{ inputs.artifact_product_name }}/server/" -T *.zip
            
              cd ${{ env.PRODUCT_BASE }}/
              curl -u ${{ secrets.JFROG_USERNAME }}:"${{secrets.JFROG_PASSWORD}}" -X PUT "https://genesisglobal.jfrog.io/artifactory/product/${{ inputs.artifact_product_name }}/server/pom-${{ env.VERSION }}.xml" -T pom.xml
            fi
