name:  Trigger Jenkins job to deploy RPM

on:
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
      client:
        required: true
        type: string
      environment:
        required: true
        type: string
      hosts:
        required: false
        type: string
        default: "ALL"

      db_backup:
        required: false
        type: boolean

      run_clear_codegen_cache:
        required: false
        type: boolean

      run_genesis_install:
        required: false
        type: boolean

      run_install_hooks:
        required: false
        type: boolean

      run_remap:
        required: false
        type: boolean

      start_server:
        required: false
        type: boolean

      genesis_user:
        required: false
        type: string

      environment_level:
        required: false
        type: string

      product:
        required: false
        type: string

      package_version:
        required: false
        type: string

      repotype:
        required: false
        type: string

    secrets:
      JENKINS_SECURITYTOKEN:
        required: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Steps to trigger jenkins job
    runs-on: appdev-selfhosted-al2023

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          ref: ${{ inputs.branch }}

      - name: Trigger Jenkins Job
        id: trigger_jenkins
        run: |
          response=$(curl -w "%{http_code}" -X POST "https://jenkinsdev.cdservice.genesis.global/buildByToken/buildWithParameters?token=${{ secrets.JENKINS_SECURITYTOKEN }}&job=AppDev-CI_CD/${{ inputs.product }}/${{ inputs.environment_level }}/product_${{ inputs.product }}_upgrade" \
            --data-urlencode "client=${{ inputs.client }}" \
            --data-urlencode "environment=${{ inputs.environment }}" \
            --data-urlencode "hosts=${{ inputs.hosts }}" \
            --data-urlencode "package_version=${{ inputs.package_version }}" \
            --data-urlencode "db_backup=${{ inputs.db_backup }}" \
            --data-urlencode "run_clear_codegen_cache=${{ inputs.run_clear_codegen_cache }}" \
            --data-urlencode "run_genesis_install=${{ inputs.run_genesis_install }}" \
            --data-urlencode "run_install_hooks=${{ inputs.run_install_hooks }}" \
            --data-urlencode "run_remap=${{ inputs.run_remap }}" \
            --data-urlencode "start_server=${{ inputs.start_server }}" \
            --data-urlencode "genesis_user=${{ inputs.genesis_user }}" \
            --data-urlencode "environment_level=${{ inputs.environment_level }}" \
            --data-urlencode "product=${{ inputs.product }}" \
            --data-urlencode "repotype=${{ inputs.repotype }}")

          echo "HTTP response code: ${response: -3}"

          if [ "${response: -3}" != "201" ]; then
            echo "Jenkins job trigger failed with response code ${response: -3}"
            exit 1
          fi
        continue-on-error: false

        
